module Character-Class

imports
  Character

sorts

  CharClass CharRange CharRanges OptCharRanges

context-free syntax

  CharRange = Character 
  CharRange.Range = <<start:Character> - <end:Character>> 
  CharRanges = CharRange 
  CharRanges.Conc = <<"left":CharRanges> <"right":CharRanges>> {right, memo}
  CharRanges = <( <CharRanges> )> {bracket}
  OptCharRanges.Absent =  
  OptCharRanges.Present = CharRanges 
  CharClass.Simple-charclass = <[ <OptCharRanges> ]> 
  CharClass.Comp = <~ <CharClass>> 
  CharClass.Diff = <<"left":CharClass> / <"right":CharClass>> {left, memo}
  CharClass.Isect = <<"left":CharClass> /\\ <"right":CharClass>> {left, memo}
  CharClass.Union = <<"left":CharClass> \\/ <"right":CharClass>> {left}
  CharClass = <( <CharClass> )> {bracket, avoid}

context-free priorities

  {} > {} > {} > {}
