module Literals

imports
  Kernel imports
  StrCon imports
  IdentifierCon

sorts

  FunctionName SingleQuotedStrCon SingleQuotedStrChar

lexical syntax

  SingleQuotedStrChar.Newline = "\\n" 
  SingleQuotedStrChar.Tab = "\\t" 
  SingleQuotedStrChar.Quote = "\\'" 
  SingleQuotedStrChar.Backslash = "\\\\" 
  SingleQuotedStrChar.Decimal = "\\" a:[0-9] b:[0-9] c:[0-9] 
  SingleQuotedStrChar.Normal = ~[\0-\31\n\t\'\\] 
  SingleQuotedStrCon.Default = [\'] chars:SingleQuotedStrChar* [\'] 

context-free syntax

  FunctionName.Unquoted-fun = IdCon 
  FunctionName.Quoted-fun = StrCon 

context-free syntax

  Symbol.Lit = <<string:StrCon>> 
  Symbol.Ci-lit = <<ci-string:SingleQuotedStrCon>> 
  Production.Prefix-fun = <<fun:FunctionName> ( <arguments:{Symbol ","}*> ) -\> <result:Symbol> <Attributes>> {avoid}
